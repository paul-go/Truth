
namespace Truth
{
	/**
	 * A mapping interface that relates the names of all events generated by
	 * the system, to the function signature of corresponding handlers.
	 */
	export interface ProgramEventMap
	{
		/**
		 * An event that triggers when a statement is inserted into a document.
		 */
		"statementChange": (
			document: Document,
			changes: readonly IStatementChangeInfo[]) => void;
		
		/**
		 * An event that triggers when a new surface-level declaration is added
		 * to a document.
		 */
		"declare": (subject: Subject, document: Document) => void;
		
		/**
		 * An event that triggers when a surface-level declaration is removed
		 * from a document.
		 */
		"undeclare": (subject: Subject, document: Document) => void;
		
		/**
		 * An event that triggers when a document is added to a program.
		 */
		"documentAdd": (document: Document) => void;
		
		/**
		 * An event that triggers when a document is removed from a program.
		 */
		"documentRemove": (document: Document) => void;
		
		/**
		 * An event that triggers when the URI associated with document
		 * is modified (typically via some rename operation).
		 */
		"documentUriChange": (document: Document) => void;
		
		/**
		 * An event that triggers when a document goes into an unchecked state.
		 */
		"documentUnchecked": (document: Document) => void;
		
		/**
		 * An event that triggers when the set of faults that are
		 * detected within the program have changed.
		 */
		"faultChange": (faultsAdded: Fault[], faultsRemoved: Fault[]) => void;
		
		/**
		 * An event that triggers any time the system has completed
		 * a full verification cycle of a program.
		 */
		"verificationComplete": (program: Program) => void;
	}
	
	/** */
	export interface IStatementChangeInfo
	{
		readonly kind: "insert" | "update" | "delete";
		readonly statement: Statement;
		readonly replacement?: Statement;
	}
}

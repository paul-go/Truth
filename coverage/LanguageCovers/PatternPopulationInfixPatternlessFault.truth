//
// This example demonstrates a fault being generated on a pattern 
// with a population infix, where that infix has no associated patterns.
// It does so while demonstrating the 3 possible ways how infixes can 
// be defined, and the same error should be generated regardless of
// the infix syntax used.
//

NoPatterns
Container
	NoPatterns

Portability
	// Inline portability type (although faulty)
	#414; /< : NoPatterns>/ : Container

Pattern
	// Inline pattern type (although faulty)
	#414; /</NoPatterns/>/ : Container

Population
	// Inline population type (although faulty)
	// Note that this would work if NoPatterns had subtypes,
	// even if they were patternless, because the compiler
	// would revert to matching based on type names.
	#414; /<NoPatterns>/ : Container

//
// This example also demontrates the same case, 
// but using the inheritance hierarchy. Again, the
// outcome is the same.
//

Patternless
PatternlessChild : Patternless
#414; /< : Patternless>/ : PatternlessChild

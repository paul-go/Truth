// 
// This example demonstrates an alias resolving through
// multiple patterns.
// 
// Although pattern-term resolution is invariant (meaning
// that in order for name resolution to occur between two
// Facts, the set of Facts specified as annotations on the
// pattern must match identical), in the case when there
// is no contract being imposed on a Fact, it can resolve
// to the Facts associated with multiple applicable patterns.
// 

Type1
/\d+ : Type1

Type2A : Type1
/=< : Type1>= : Type2A

Type2B : Type1
/=< : Type1>= : Type2B

TypeX
/\a+ : TypeX

Type2C : TypeX
/=< : TypeX>= : Type2C

Value : =2= ~ Type2A, Type2B

// 
// This behavior doesn't necessarily break the invariant
// nature of pattern-term resolution, because it's the
// semantic equivalent of the following:
// 

Type1
Type2A : Type1
Type2A-Like : Type2A

Type2B : Type1
Type2B-Like : Type2B

Value : Type2A-Like, Type2B-Like
